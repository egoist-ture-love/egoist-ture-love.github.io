<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>学习笔记</title>
    <url>/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</url>
    <content><![CDATA[<h1 id="面对对象编程"><a href="#面对对象编程" class="headerlink" title="面对对象编程"></a>面对对象编程</h1><h2 id="什么叫面对对象编程"><a href="#什么叫面对对象编程" class="headerlink" title="什么叫面对对象编程"></a>什么叫面对对象编程</h2><h3 id="面对对象就是基于对象为中心，以类和继承为构造机制，来认识理解客观世界和设计，构造相应的软件系统。"><a href="#面对对象就是基于对象为中心，以类和继承为构造机制，来认识理解客观世界和设计，构造相应的软件系统。" class="headerlink" title="面对对象就是基于对象为中心，以类和继承为构造机制，来认识理解客观世界和设计，构造相应的软件系统。"></a>面对对象就是基于对象为中心，以类和继承为构造机制，来认识理解客观世界和设计，构造相应的软件系统。</h3><blockquote>
<p>简易的理解面对对象就是了解事情的<strong>属性和方法</strong><br>例如 斗地主你需要了解地主的属性也就是特征—-地主比较胖，地主有小胡子，地主很有钱<br>还要了解地主的方法也就是行为—-摸牌，看牌，初排等等<br>把他们用变量和函数表示出来就是面对对象编程</p>
</blockquote>
<h3 id="注意：面对对象编程只是一种思维逻辑代码并不会少写。"><a href="#注意：面对对象编程只是一种思维逻辑代码并不会少写。" class="headerlink" title="注意：面对对象编程只是一种思维逻辑代码并不会少写。"></a>注意：面对对象编程只是一种思维逻辑代码并不会少写。</h3><h2 id="什么是类"><a href="#什么是类" class="headerlink" title="什么是类"></a>什么是类</h2><p> 1.类是将抽象转化为用户定义类型的工具<br> 2.将数据表示和操作数据方法成为一个整体<br> 3.类的实例是对象<br> 4.类的变量和函数成为成员<br> <strong>简洁点理解就是使变量和对应函数放在一起的东西叫类</strong><br> eg.<br> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">地主类</span><br><span class="line">数据类型：名称，积分，胡子形态，身材</span><br><span class="line">成员变量：打牌动作，摸牌动作，看牌动作</span><br></pre></td></tr></table></figure></p>
<h3 id="类的声明"><a href="#类的声明" class="headerlink" title="类的声明"></a>类的声明</h3><h4 id="类有两种声明方式"><a href="#类有两种声明方式" class="headerlink" title="类有两种声明方式"></a>类有两种声明方式</h4><p>1.class类名{}; ———- class landOwner {};<br>2.struct类名{};————struct landOwner{};</p>
<h4 id="两种区别"><a href="#两种区别" class="headerlink" title="两种区别"></a>两种区别</h4><blockquote>
<p>class默认类型是私有的<br>struct默认类型是共有的</p>
</blockquote>
<h4 id="具体声明函数例子"><a href="#具体声明函数例子" class="headerlink" title="具体声明函数例子"></a>具体声明函数例子</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名&#123;</span></span><br><span class="line">修饰符<span class="number">1</span>：</span><br><span class="line">        变量<span class="number">1</span>类型名称;  </span><br><span class="line">        变量<span class="number">2</span>类型名称;</span><br><span class="line">修饰符<span class="number">2</span>：</span><br><span class="line">        函数<span class="number">1</span>返回值类型 函数<span class="number">1</span>名称;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">landOwner</span>&#123;</span></span><br><span class="line">            <span class="keyword">public</span>:</span><br><span class="line">                    <span class="built_in">string</span> name;</span><br><span class="line">                    <span class="keyword">long</span> score;</span><br><span class="line">            <span class="keyword">public</span>:</span><br><span class="line">                    <span class="function"><span class="keyword">void</span> <span class="title">showscore</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h4 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">返回值类型 类名::函数名()&#123;</span><br><span class="line">    <span class="comment">//函数操作;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">LandOwer::ShowScore</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; score &lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="访问修饰符"><a href="#访问修饰符" class="headerlink" title="访问修饰符"></a>访问修饰符</h2><h3 id="public-修饰的成员在所有地方都可以访问"><a href="#public-修饰的成员在所有地方都可以访问" class="headerlink" title="public  修饰的成员在所有地方都可以访问"></a>public  修饰的成员在所有地方都可以访问</h3><h3 id="private-修饰的成员只能在类中或友元函数中访问"><a href="#private-修饰的成员只能在类中或友元函数中访问" class="headerlink" title="private 修饰的成员只能在类中或友元函数中访问"></a>private 修饰的成员只能在类中或友元函数中访问</h3><h3 id="protect-修饰的成员可以在类中友元函数，子类中访问"><a href="#protect-修饰的成员可以在类中友元函数，子类中访问" class="headerlink" title="protect 修饰的成员可以在类中友元函数，子类中访问"></a>protect 修饰的成员可以在类中友元函数，子类中访问</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> 类名 &#123;</span></span><br><span class="line">    修饰符：</span><br><span class="line">        成员列表;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><h3 id="什么是封装"><a href="#什么是封装" class="headerlink" title="什么是封装"></a>什么是封装</h3><blockquote>
<p>把客观事物封装成抽象的类，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的进行信息隐藏。</p>
</blockquote>
<h3 id="使用Get和Set实现封装"><a href="#使用Get和Set实现封装" class="headerlink" title="使用Get和Set实现封装"></a>使用Get和Set实现封装</h3><h4 id="Get和Set是为了对函数进行限制所添加的语句"><a href="#Get和Set是为了对函数进行限制所添加的语句" class="headerlink" title="Get和Set是为了对函数进行限制所添加的语句"></a>Get和Set是为了对函数进行限制所添加的语句</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">Getscore</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> score;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Setscore</span><span class="params">(<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 判断语句;</span></span><br><span class="line">    score = val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><h3 id="什么是构造函数"><a href="#什么是构造函数" class="headerlink" title="什么是构造函数"></a>什么是构造函数</h3><blockquote>
<p>以类名作为函数名，无返回值类型</p>
</blockquote>
<h3 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h3><blockquote>
<p>初始化对象数据成员<br>编译器自动调用函数进行初始化</p>
</blockquote>
<h3 id="构造函数类型"><a href="#构造函数类型" class="headerlink" title="构造函数类型"></a>构造函数类型</h3><blockquote>
<p>1.无参构造<br>2.一般构造<br>3.拷贝构造</p>
</blockquote>
<h4 id="1-无参数构造"><a href="#1-无参数构造" class="headerlink" title="1. 无参数构造"></a>1. 无参数构造</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LandownerV4</span>&#123;</span></span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">        LandowerV4();<span class="comment">//无参函数定义</span></span><br><span class="line">        <span class="comment">//另一种写法 LandowerV4 = default;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LandOwner :: LandownerV4()&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"landowner的无参函数构造调用"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：<br>1 如果创建的类中没书写任何构造函数，系统默认分配无参函数<br> 2如果书写了构造函数则系统不在生成，，如需生成默认构造，需要自己写出来。</p>
</blockquote>
<h4 id="2-一般构造"><a href="#2-一般构造" class="headerlink" title="2.一般构造"></a>2.一般构造</h4><h5 id="一般构造格式"><a href="#一般构造格式" class="headerlink" title="一般构造格式"></a>一般构造格式</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">类名::构造(类型<span class="number">1</span> 参数<span class="number">1</span>，类型<span class="number">2</span> 参数<span class="number">2.</span>......)&#123;</span><br><span class="line">    <span class="comment">//相关初始化代码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Student::Student(<span class="built_in">string</span> name,<span class="built_in">string</span>,desc)&#123;</span><br><span class="line">    _name = name;<span class="comment">//Set(name);等价写法</span></span><br><span class="line">    _desc = desc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Student*stu=<span class="keyword">new</span> Student(<span class="string">"撒贝宁，北大还行"</span>);</span><br><span class="line">stu-&gt;ShowInfo();</span><br><span class="line"><span class="comment">//带参构造与函数重载要求一样。</span></span><br></pre></td></tr></table></figure>
<h4 id="拷贝构造"><a href="#拷贝构造" class="headerlink" title="拷贝构造"></a>拷贝构造</h4><h2 id="析构函数"><a href="#析构函数" class="headerlink" title="析构函数"></a>析构函数</h2><h3 id="什么是析构函数"><a href="#什么是析构函数" class="headerlink" title="什么是析构函数"></a>什么是析构函数</h3><blockquote>
<p>对象过过期时自动调用的特殊成员函数<br>析构函数一般用来完成清理任务<br>析构函数是在构造函数前面加上~</p>
<blockquote>
<p>析构函数没有参数，只能有一个</p>
</blockquote>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">~student()&#123;</span><br><span class="line">    delet scores;<span class="comment">//释放资源</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>注意：析构函数用来释放对象使用资源，不是销毁资源。<br>无论何时一个对象被销毁，都会自动调用其析构函数。</p>
</blockquote>
]]></content>
      <categories>
        <category>语言</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>2020.3.23学习任务</title>
    <url>/2020-3-23%E5%AD%A6%E4%B9%A0%E4%BB%BB%E5%8A%A1.html</url>
    <content><![CDATA[<h1 id="代码练习任务"><a href="#代码练习任务" class="headerlink" title="代码练习任务"></a>代码练习任务</h1><blockquote>
<h2 id="1-先花时间把前天学过的15-1-15-7前面代码用笔写3遍-2h的时间"><a href="#1-先花时间把前天学过的15-1-15-7前面代码用笔写3遍-2h的时间" class="headerlink" title="1.先花时间把前天学过的15.1-15.7前面代码用笔写3遍(2h的时间)"></a>1.先花时间把前天学过的15.1-15.7前面代码用笔写3遍(2h的时间)</h2><h2 id="2-肝视频-每看完一个视频，将代码打三遍-每1h休息15分钟-5小时学习量-休30分钟"><a href="#2-肝视频-每看完一个视频，将代码打三遍-每1h休息15分钟-5小时学习量-休30分钟" class="headerlink" title="2.肝视频 每看完一个视频，将代码打三遍   每1h休息15分钟  5小时学习量 休30分钟"></a>2.肝视频 每看完一个视频，将代码打三遍   每1h休息15分钟  5小时学习量 休30分钟</h2><h2 id="3-中午晚上吃饭休息1h"><a href="#3-中午晚上吃饭休息1h" class="headerlink" title="3.中午晚上吃饭休息1h"></a>3.中午晚上吃饭休息1h</h2><h2 id="4-到16-7截止学习"><a href="#4-到16-7截止学习" class="headerlink" title="4.到16.7截止学习"></a>4.到16.7截止学习</h2></blockquote>
<h1 id="英语学习任务"><a href="#英语学习任务" class="headerlink" title="英语学习任务"></a>英语学习任务</h1><blockquote>
<h2 id="1-3-4小时学英语，外刊课程和单词背诵-晚上7点开始"><a href="#1-3-4小时学英语，外刊课程和单词背诵-晚上7点开始" class="headerlink" title="1. 3-4小时学英语，外刊课程和单词背诵(晚上7点开始)"></a>1. 3-4小时学英语，外刊课程和单词背诵(晚上7点开始)</h2></blockquote>
<h1 id="身体训练"><a href="#身体训练" class="headerlink" title="身体训练"></a>身体训练</h1><blockquote>
<h2 id="1-9点训练"><a href="#1-9点训练" class="headerlink" title="1. 9点训练"></a>1. 9点训练</h2></blockquote>
<h1 id="教是最好的学"><a href="#教是最好的学" class="headerlink" title="教是最好的学"></a>教是最好的学</h1><blockquote>
<h3 id="每两天把学会的东西简单分享上来"><a href="#每两天把学会的东西简单分享上来" class="headerlink" title="每两天把学会的东西简单分享上来"></a>每两天把学会的东西简单分享上来</h3></blockquote>
]]></content>
      <categories>
        <category>变强的计划</category>
      </categories>
      <tags>
        <tag>学习计划</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在15分钟内熟练掌握Markdown所有语法</title>
    <url>/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8markdown.html</url>
    <content><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=520 height=86 src="//music.163.com/outchain/player?type=2&id=785887&auto=0&height=66"></iframe>

<h1 id="一-认识Markdown"><a href="#一-认识Markdown" class="headerlink" title="一.认识Markdown"></a>一.认识Markdown</h1><blockquote>
<p>Markdown是一种轻量级标记语言，创始人为约翰·格鲁伯（英语：John Gruber）。它允许人们使用易读易写的纯文本格式编写文档，然后转换成有效的XHTML（或者HTML）文档。这种语言吸收了很多在电子邮件中已有的纯文本标记的特性。—维基百科</p>
</blockquote>
<p>看完是不是有点懵，用民间的说法就是<strong>其实markdown就是一个文本编辑器，让人可以不依赖鼠标就可以编写出你想要格式的文本编辑器。</strong></p>
<h1 id="二-基础语法"><a href="#二-基础语法" class="headerlink" title="二.基础语法"></a>二.基础语法</h1><p>##1. 标题</p>
<h3 id="Markdown-的标题只需要在文本前面加上-就可以了，几级标题加几个＃-最多支持6级标题"><a href="#Markdown-的标题只需要在文本前面加上-就可以了，几级标题加几个＃-最多支持6级标题" class="headerlink" title="Markdown 的标题只需要在文本前面加上#就可以了，几级标题加几个＃,最多支持6级标题."></a>Markdown 的标题只需要在文本前面加上#就可以了，几级标题加几个＃,最多支持6级标题.</h3><blockquote>
<p> #一级标题<br>##二级标题<br>###三级标题<br>####四级标题<br>#####五级标题<br>######六级标题</p>
</blockquote>
<h2 id="2-列表"><a href="#2-列表" class="headerlink" title="2.列表"></a>2.列表</h2><h3 id="Markdown支持两种列表-有序列表-和-无序列表"><a href="#Markdown支持两种列表-有序列表-和-无序列表" class="headerlink" title="Markdown支持两种列表 有序列表 和 无序列表"></a>Markdown支持两种列表 <strong>有序列表</strong> 和 <strong>无序列表</strong></h3><h4 id="有序列表—就在文字前面加上编号和-就行了"><a href="#有序列表—就在文字前面加上编号和-就行了" class="headerlink" title="有序列表—就在文字前面加上编号和.就行了"></a>有序列表—就在文字前面加上编号和.就行了</h4><h5 id="例如"><a href="#例如" class="headerlink" title="例如:"></a>例如:</h5><blockquote>
<ol>
<li>有序列表1</li>
<li>有序列表2</li>
<li>有序列表3</li>
</ol>
</blockquote>
<h4 id="无序列表-—文字前面加上-“-“-就ok了"><a href="#无序列表-—文字前面加上-“-“-就ok了" class="headerlink" title="无序列表 —文字前面加上 “ - “ 就ok了"></a>无序列表 —文字前面加上 “ - “ 就ok了</h4><blockquote>
<ul>
<li>无序列表1  </li>
<li>无序列表2</li>
<li>无序列表3</li>
</ul>
</blockquote>
<h2 id="3-斜体和加粗"><a href="#3-斜体和加粗" class="headerlink" title="3.斜体和加粗"></a>3.斜体和加粗</h2><h3 id="斜体"><a href="#斜体" class="headerlink" title="斜体"></a>斜体</h3><h4 id="文字左右各一个”-“-就完成了-例如-斜体"><a href="#文字左右各一个”-“-就完成了-例如-斜体" class="headerlink" title="文字左右各一个” * “ 就完成了   例如: * 斜体 *"></a>文字左右各一个” * “ 就完成了   例如: * 斜体 *</h4><blockquote>
<p><em>斜体</em></p>
</blockquote>
<h3 id="粗体"><a href="#粗体" class="headerlink" title="粗体"></a>粗体</h3><h4 id="文字左右各两个”-“就完成了-例如-粗体"><a href="#文字左右各两个”-“就完成了-例如-粗体" class="headerlink" title="文字左右各两个” * “就完成了    例如: ** 粗体 **"></a>文字左右各两个” * “就完成了    例如: ** 粗体 **</h4><blockquote>
<p><strong>粗体</strong><br>##4. 引用</p>
</blockquote>
<h3 id="我们可能需要在文章中引用别人的文章-句子-代码……-这个标签就尤为重要了"><a href="#我们可能需要在文章中引用别人的文章-句子-代码……-这个标签就尤为重要了" class="headerlink" title="我们可能需要在文章中引用别人的文章,句子,代码…….这个标签就尤为重要了"></a>我们可能需要在文章中引用别人的文章,句子,代码…….这个标签就尤为重要了</h3><h3 id="我们只需要在前面加上-“-gt-“就完成了"><a href="#我们只需要在前面加上-“-gt-“就完成了" class="headerlink" title="我们只需要在前面加上 “ &gt; “就完成了."></a>我们只需要在前面加上 “ &gt; “就完成了.</h3><blockquote>
<p> 这个是效果</p>
</blockquote>
<h2 id="5-代码块"><a href="#5-代码块" class="headerlink" title="5. 代码块"></a>5. 代码块</h2><h3 id="对于程序员来说-能用Markdown书写代码尤为重要-嘻嘻-毕竟创作之初就是用来书写代码的嘛"><a href="#对于程序员来说-能用Markdown书写代码尤为重要-嘻嘻-毕竟创作之初就是用来书写代码的嘛" class="headerlink" title="对于程序员来说,能用Markdown书写代码尤为重要(嘻嘻~ 毕竟创作之初就是用来书写代码的嘛)"></a>对于程序员来说,能用Markdown书写代码尤为重要(嘻嘻~ 毕竟创作之初就是用来书写代码的嘛)</h3><h4 id="那么格式是"><a href="#那么格式是" class="headerlink" title="那么格式是:"></a>那么格式是:</h4><blockquote>
<p> <strong>``` key</strong><br>   <strong>代码块</strong><br>   <strong>```</strong></p>
</blockquote>
<p>例如:</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"hello,world"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>language</th>
<th>key</th>
</tr>
</thead>
<tbody><tr>
<td>C++</td>
<td>cpp</td>
</tr>
<tr>
<td>CSS</td>
<td>css</td>
</tr>
<tr>
<td>Django</td>
<td>django</td>
</tr>
<tr>
<td>HTTP</td>
<td>http</td>
</tr>
<tr>
<td>Java</td>
<td>java</td>
</tr>
<tr>
<td>XML,HTML</td>
<td>xml</td>
</tr>
</tbody></table>
<h2 id="6-分割线"><a href="#6-分割线" class="headerlink" title="6.分割线"></a>6.分割线</h2><h3 id="三个或者三个以上的-或者-都可以。"><a href="#三个或者三个以上的-或者-都可以。" class="headerlink" title="三个或者三个以上的 - 或者 * 都可以。"></a>三个或者三个以上的 - 或者 * 都可以。</h3><hr>
<h4 id="这个是效果"><a href="#这个是效果" class="headerlink" title="这个是效果"></a>这个是效果</h4><hr>
<h2 id="7-插入图片"><a href="#7-插入图片" class="headerlink" title="7.插入图片"></a>7.插入图片</h2><h3 id="为了使文章更有说服力，很多人会使用图片来加强理解"><a href="#为了使文章更有说服力，很多人会使用图片来加强理解" class="headerlink" title="为了使文章更有说服力，很多人会使用图片来加强理解"></a>为了使文章更有说服力，很多人会使用图片来加强理解</h3><blockquote>
<p>![图片alt](图片地址 ‘’图片title’’)<br>图片alt:图片下面的文字<br>图片地址：就是很单纯的图片地址<br>图片title： 鼠标移动到图片上面时候显示的东西</p>
</blockquote>
<p><img src="/images/markdown.jpg" alt="就是这个样子"></p>
<h2 id="8-表格"><a href="#8-表格" class="headerlink" title="8.表格"></a>8.表格</h2><h3 id="上面的语言和关键字就是用表格实现的"><a href="#上面的语言和关键字就是用表格实现的" class="headerlink" title="上面的语言和关键字就是用表格实现的"></a>上面的语言和关键字就是用表格实现的</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">name | <span class="number">111</span> | <span class="number">222</span> | <span class="number">333</span> | <span class="number">444</span></span><br><span class="line">- | :-: | :-: | :-: | -:</span><br><span class="line">aaa | bbb | ccc | ddd | eee| </span><br><span class="line">fff | ggg| hhh | iii | <span class="number">000</span>|</span><br></pre></td></tr></table></figure>
<p>呈现效果就是这样的：</p>
<table>
<thead>
<tr>
<th>name</th>
<th align="center">111</th>
<th align="center">222</th>
<th align="center">333</th>
<th align="right">444</th>
</tr>
</thead>
<tbody><tr>
<td>aaa</td>
<td align="center">bbb</td>
<td align="center">ccc</td>
<td align="center">ddd</td>
<td align="right">eee</td>
</tr>
<tr>
<td>fff</td>
<td align="center">ggg</td>
<td align="center">hhh</td>
<td align="center">iii</td>
<td align="right">000</td>
</tr>
</tbody></table>
<h1 id="三-总结"><a href="#三-总结" class="headerlink" title="三.总结"></a>三.总结</h1><h3 id="这些是Markdown基础用法，如何各位在生活或工作中还需要更全面的Markdown的教学，请自行查案看Markdown官方文档-https-markdown-zh-readthedocs-io-en-latest"><a href="#这些是Markdown基础用法，如何各位在生活或工作中还需要更全面的Markdown的教学，请自行查案看Markdown官方文档-https-markdown-zh-readthedocs-io-en-latest" class="headerlink" title="这些是Markdown基础用法，如何各位在生活或工作中还需要更全面的Markdown的教学，请自行查案看Markdown官方文档 https://markdown-zh.readthedocs.io/en/latest/"></a>这些是Markdown基础用法，如何各位在生活或工作中还需要更全面的Markdown的教学，请自行查案看Markdown官方文档 <a href="https://markdown-zh.readthedocs.io/en/latest/" target="_blank" rel="noopener">https://markdown-zh.readthedocs.io/en/latest/</a></h3>]]></content>
      <categories>
        <category>语言</category>
      </categories>
      <tags>
        <tag>基础语法</tag>
      </tags>
  </entry>
</search>
